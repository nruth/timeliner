:javascript
  var timeline_data = {  // save as a global variable
  'dateTimeFormat': 'iso8601',
  'events' : [
  #{
    timeline_data.map do |element|
      haml :'timeline_item.js', :locals => {:element => element}
    end.join
    }
  ]
  }

  var tl;
  function onLoad() {
  	var tl_el = document.getElementById("my-timeline");
  	var eventSource1 = new Timeline.DefaultEventSource();
	
  	var theme1 = Timeline.ClassicTheme.create();
    theme1.autoWidth = true; // Set the Timeline's "width" automatically.
  	theme1.timeline_start = new Date(Date.UTC(1900, 1, 1));
  	theme1.timeline_stop  = new Date(Date.UTC(2100, 1, 1));
	
  	var d = Timeline.DateTime.parseGregorianDateTime("2010")
  	var bandInfos = [
  		Timeline.createBandInfo({
  			 width:          170, 
  			 intervalUnit:   Timeline.DateTime.YEAR, 
  			 intervalPixels: 500,
  			 eventSource:	 eventSource1,
  			date:           d,
  			theme:          theme1,
  			layout:         'original'  // original, overview, detailed			 
		 
  		 }),							 
  		Timeline.createBandInfo({
           	overview:       true,								
  			width:          30, // set to a minimum, autoWidth will then adjust
  			intervalUnit:   Timeline.DateTime.DECADE, 
  			intervalPixels: 200,
  			eventSource:    eventSource1,
  			date:           d,
  			theme:          theme1,
  			layout:         'original'  // original, overview, detailed
		
  		})
  	];
	
  	bandInfos[1].syncWith = 0;
  	bandInfos[1].highlight = true;
													
  	// create the Timeline
  	tl = Timeline.create(tl_el, bandInfos, Timeline.HORIZONTAL);
	
  	var url = '.'; // The base url for image, icon and background image
  				   // references in the data
  	eventSource1.loadJSON(timeline_data, url); // The data was stored into the 
  											   // timeline_data variable.
  	tl.layout(); // display the Timeline
  }

  var resizeTimerID = null;
  function onResize() {
  	if (resizeTimerID == null) {
  		resizeTimerID = window.setTimeout(function() {
  			resizeTimerID = null;
  			tl.layout();
  		}, 500);
  	}
  }